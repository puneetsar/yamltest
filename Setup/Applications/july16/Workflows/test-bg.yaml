harnessApiVersion: '1.0'
type: BLUE_GREEN
envName: prod
failureStrategies:
- executionScope: WORKFLOW
  failureTypes:
  - APPLICATION_ERROR
  repairActionCode: ROLLBACK_WORKFLOW
  retryCount: 0
notificationRules:
- conditions:
  - FAILED
  executionScope: WORKFLOW
  notificationGroups:
  - Account Administrator
phases:
- type: KUBERNETES
  computeProviderName: harness-exploration
  daemonSet: false
  infraMappingName: us-west1-a_harness-test -GCP_Kubernetes--Google Cloud Platform- harness-exploration- default
  name: Phase 1
  phaseSteps:
  - type: CONTAINER_SETUP
    name: Setup Container
    steps:
    - type: KUBERNETES_SETUP
      name: Blue/Green Service Setup
      properties:
        replicationControllerName: ${app.name}-${service.name}-${env.name}
        useIstioRouteRule: false
        blueGreen: true
        desiredInstanceCount: runningInstances
        blueGreenConfig:
          primaryService:
            serviceType: ClusterIP
            protocol: TCP
            port: 80
            targetPort: 8080
          stageService:
            serviceType: ClusterIP
            protocol: TCP
            port: 80
            targetPort: 8080
          ingressYaml: |-
            # Required placeholders: ${PRIMARY_SERVICE_NAME},${PRIMARY_SERVICE_PORT}, ${STAGE_SERVICE_NAME} and ${STAGE_SERVICE_PORT}
            # ---
            apiVersion: extensions/v1beta1
            kind: Ingress
            metadata:
              name: name-will-be-replaced
              annotations:
                ingress.kubernetes.io/ingress-class: nginx
            spec:
              rules:
              - host: a.yourhostname.k8s.demo.io
                http:
                  paths:
                  - path: /
                    backend:
                      serviceName: ${PRIMARY_SERVICE_NAME}
                      servicePort: ${PRIMARY_SERVICE_PORT}
              - host: a.stage.yourhostname.k8s.demo.io
                http:
                  paths:
                  - path: /
                    backend:
                      serviceName: ${STAGE_SERVICE_NAME}
                      servicePort: ${STAGE_SERVICE_PORT}
          useIngress: true
        maxInstances: '2'
        resizeStrategy: Add new instances first, then downsize old instances
        serviceSteadyStateTimeout: 10
    stepsInParallel: false
  - type: CONTAINER_DEPLOY
    name: Deploy Containers
    steps:
    - type: KUBERNETES_DEPLOY
      name: Upgrade Containers
      properties:
        downsizeInstanceUnitType: PERCENTAGE
        instanceUnitType: PERCENTAGE
        instanceCount: 100
        downsizeInstanceCount: 100
    stepsInParallel: false
  - type: VERIFY_SERVICE
    name: Verify Stage Service
    stepsInParallel: false
  - type: ROUTE_UPDATE
    name: Route Update
    steps:
    - type: KUBERNETES_SWAP_SERVICE_SELECTORS
      name: Swap Primary with Stage
      properties:
        service2: ${app.name}-${service.name}-${env.name}-stage
        service1: ${app.name}-${service.name}-${env.name}-primary
    stepsInParallel: false
  - type: WRAP_UP
    name: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: hello
  statefulSet: false
rollbackPhases:
- type: KUBERNETES
  computeProviderName: harness-exploration
  daemonSet: false
  infraMappingName: us-west1-a_harness-test -GCP_Kubernetes--Google Cloud Platform- harness-exploration- default
  name: Rollback Phase 1
  phaseNameForRollback: Phase 1
  phaseSteps:
  - type: ROUTE_UPDATE
    name: Route Update
    steps:
    - type: KUBERNETES_SWAP_SERVICE_SELECTORS
      name: Swap Primary with Stage
    stepsInParallel: false
  - type: CONTAINER_DEPLOY
    name: Deploy Containers
    phaseStepNameForRollback: Deploy Containers
    statusForRollback: SUCCESS
    stepsInParallel: false
  - type: CONTAINER_SETUP
    name: Setup Container
    phaseStepNameForRollback: Setup Container
    statusForRollback: SUCCESS
    stepsInParallel: false
  - type: VERIFY_SERVICE
    name: Verify Service
    phaseStepNameForRollback: Deploy Containers
    statusForRollback: SUCCESS
    stepsInParallel: false
  - type: WRAP_UP
    name: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: hello
  statefulSet: false
templatized: false

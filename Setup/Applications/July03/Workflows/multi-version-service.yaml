harnessApiVersion: '1.0'
type: BASIC
envName: test
failureStrategies:
- executionScope: WORKFLOW
  failureTypes:
  - APPLICATION_ERROR
  repairActionCode: ROLLBACK_WORKFLOW
  retryCount: 0
notificationRules:
- conditions:
  - FAILED
  executionScope: WORKFLOW
  notificationGroups:
  - Account Administrator
phases:
- type: KUBERNETES
  computeProviderName: harness-exploration
  daemonSet: false
  infraMappingName: us-west1-a_harness-test -GCP_Kubernetes--Google Cloud Platform- harness-exploration- default-1
  name: Phase 1
  phaseSteps:
  - type: CONTAINER_SETUP
    name: Setup Container
    steps:
    - type: KUBERNETES_SETUP
      name: Kubernetes Service Setup
      properties:
        serviceType: Yaml
        replicationControllerName: ${app.name}-${service.name}-${env.name}-${workflow.releaseNo}
        fixedInstances: '1'
        useIstioRouteRule: false
        ingressYaml: |-
          # Required placeholders: ${SERVICE_NAME} and ${SERVICE_PORT}
          # ---
          apiVersion: extensions/v1beta1
          kind: Ingress
          metadata:
           name: name-will-be-replaced
           annotations:
            ingress.kubernetes.io/rewrite-target: /
          spec:
            rules:
            - http:
               paths:
               - path: /path
                 backend:
                  serviceName: ${SERVICE_NAME}
                  servicePort: ${SERVICE_PORT}
        desiredInstanceCount: fixedInstances
        useIngress: true
        maxInstances: 2
        serviceYaml: |-
          kind: Service
          apiVersion: v1
          metadata:
            name: my-service-${artifact.buildNo}
          spec:
            selector:
              app: MyApp
            ports:
            - protocol: TCP
              port: 80
              targetPort: 8080
        resizeStrategy: RESIZE_NEW_FIRST
        serviceSteadyStateTimeout: 10
    stepsInParallel: false
  - type: CONTAINER_DEPLOY
    name: Deploy Containers
    stepsInParallel: false
  - type: VERIFY_SERVICE
    name: Verify Service
    stepsInParallel: false
  - type: WRAP_UP
    name: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: test-newrelic
  statefulSet: false
rollbackPhases:
- type: KUBERNETES
  computeProviderName: harness-exploration
  daemonSet: false
  infraMappingName: us-west1-a_harness-test -GCP_Kubernetes--Google Cloud Platform- harness-exploration- default-1
  name: Rollback Phase 1
  phaseNameForRollback: Phase 1
  phaseSteps:
  - type: CONTAINER_DEPLOY
    name: Deploy Containers
    phaseStepNameForRollback: Deploy Containers
    statusForRollback: SUCCESS
    steps:
    - type: KUBERNETES_DEPLOY_ROLLBACK
      name: Rollback Containers
    stepsInParallel: false
  - type: CONTAINER_SETUP
    name: Setup Container
    phaseStepNameForRollback: Setup Container
    statusForRollback: SUCCESS
    steps:
    - type: KUBERNETES_SETUP_ROLLBACK
      name: Rollback Kubernetes Setup
    stepsInParallel: false
  - type: VERIFY_SERVICE
    name: Verify Service
    phaseStepNameForRollback: Deploy Containers
    statusForRollback: SUCCESS
    stepsInParallel: false
  - type: WRAP_UP
    name: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: test-newrelic
  statefulSet: false
templatized: false
